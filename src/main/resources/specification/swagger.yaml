swagger: '2.0'
info:
  version: 1.0.0
  title: Sample API
  description: API description in Markdown
  termsOfService: terms
  contact:
    name: MinhaAPI
    url: http://www.minha.api.com.br/
    email: r.fernandon@gmail.com
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
host: api.example.com
basePath: /v1
schemes:
  - http
  - https
tags:
  - name: "Usuario"
    description: 'Lista de endpoints disponíveis para o recurso: __usuario__'
  - name: "Postagem"
    description: 'Lista de endpoints disponíveis para o recurso: __postagem__'
consumes:
  - application/json
produces:
  - application/json
paths:
  /usuario:
    get:
      tags:
        - "Usuario"
      summary: 'Buscar usuários'
      description: 'Este endpoint retorna todos os usuários cadastrados'
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: 'OK - Retorna uma lista com todos os usuários'
          schema:
            type: array
            items:
              $ref: "#/definitions/Usuario"
        204:
          description: 'No Content - Nenhum usuário foi encontrado'
        500:
          description: 'Internal Server Error - Ocorreu um erro inesperado no servidor'
          schema:
            $ref: '#/definitions/ErrorDetails'
    post:
      tags:
        - "Usuario"
      summary: 'Cadastrar usuário'
      description: 'Este endpoint cadastra um novo usuário'
      parameters:
        - in: body
          name: usuario
          description: 'Parâmetro referente ao usuário'
          required: true
          schema:
            $ref: "#/definitions/Usuario"
      responses:
        201:
          description: 'OK - Retorna o usuário cadastrado'
          schema:
            $ref: '#/definitions/Usuario'
        400:
          description: 'Bad Request - Requisição inválida'
          schema:
            $ref: '#/definitions/ErrorDetails'
        500:
          description: 'Internal Server Error - Ocorreu um erro inesperado no servidor'
          schema:
            $ref: '#/definitions/ErrorDetails'
  /usuario/{id}:
    get:
      tags:
        - "Usuario"
      summary: 'Buscar um usuário'
      description: 'Este endpoint retorna o usuário que foi especificado no path da uri'
      parameters:
        - in: path
          name: id
          description: 'Parâmetro referente ao id do usuário'
          required: true
          type: integer
      responses:
        200:
          description: 'OK - Retorna o usuário cadastrado'
          schema:
            $ref: '#/definitions/Usuario'
        204:
          description: 'No Content - Nenhum usuário foi encontrado'
        500:
          description: 'Internal Server Error - Ocorreu um erro inesperado no servidor'
          schema:
            $ref: '#/definitions/ErrorDetails'
    put:
      tags:
        - "Usuario"
      summary: 'Atualizar um usuário'
      description: 'Este endpoint atualiza um determinado usuário cadastrado'
      parameters:
        - in: path
          name: id
          description: 'Parâmetro referente ao id do usuário'
          required: true
          type: integer
        - in: body
          name: usuario
          description: 'Parâmetro referente ao id do usuário'
          required: true
          schema:
            $ref: '#/definitions/Usuario'
      responses:
        200:
          description: 'OK - Retorna o usuário atualizado'
          schema:
            $ref: '#/definitions/Usuario'
        404:
          description: 'Not Found - Usuário não localizado'
          schema:
            $ref: '#/definitions/ErrorDetails'
        400:
          description: 'Bad Request - Requisição inválida'
          schema:
            $ref: '#/definitions/ErrorDetails'
        500:
          description: 'Internal Server Error - Ocorreu um erro inesperado no servidor'
          schema:
            $ref: '#/definitions/ErrorDetails'
    delete:
      tags:
        - "Usuario"
      summary: 'Excluir um usuário'
      description: 'Este endpoint exclui um determinado usuário cadastrado'
      parameters:
        - in: path
          name: id
          description: 'Parâmetro referente ao id do usuário'
          required: true
          type: integer
      responses:
        200:
          description: 'Retorna o status http de operação OK'
        404:
          description: 'Not Found - Usuário não localizado'
          schema:
            $ref: '#/definitions/ErrorDetails'
        500:
          description: 'Internal Server Error - Ocorreu um erro inesperado no servidor'
          schema:
            $ref: '#/definitions/ErrorDetails'
  /postagem:
    post:
      tags:
        - "Postagem"
      summary: 'Cadastrar publição'
      description: 'Este endpoint cadastra uma nova publição'
      parameters:
        - in: body
          name: publicacao
          description: 'Parâmetro referente a publição'
          required: true
          schema:
            $ref: "#/definitions/Postagem"
      responses:
        201:
          description: 'OK - Retorna a publição cadastrada'
          schema:
            $ref: '#/definitions/Postagem'
        400:
          description: 'Bad Request - Requisição inválida'
          schema:
            $ref: '#/definitions/ErrorDetails'
        500:
          description: 'Internal Server Error - Ocorreu um erro inesperado no servidor'
          schema:
            $ref: '#/definitions/ErrorDetails'
definitions:
  ErrorDetails:
    type: object
    description: 'Objeto utilizado para representar os dados da mensagem de erro'
    required:
      - timestamp
      - statusCode
      - statusMessage
      - message
    properties:
      timestamp:
        type: string
        format: date-time
        description: 'Data e hora em que o erro ocorreu'
      statusCode:
        type: integer
        description: 'Código do status http'
      statusMessage:
        type: string
        description: 'Mensagem do código do status http'
      message:
        type: string
        description: 'Mensagem gerada pela aplicação'
      path:
        type: string
        description: 'Path que o erro ocorreu'
      exception:
        type: string
        description: 'Exception referente ao erro ocorrido'
  Usuario:
    type: object
    description: 'Objeto utilizado para representar os dados do usuário'
    required:
      - nome
      - username
      - password
      - email
    properties:
      id:
        type: integer
        description: 'Identificador unico do usuário'
      nome:
        type: string
        description: 'Nome do usuário'
      username:
        type: string
        description: 'Username do usuário'
      email:
        type: string
        description: 'Email do usuário'
      perfil:
        type: string
        description: 'Define o perfil do usuário'
        enum:
          - 'ADMIN'
          - 'VISITANTE'
  Postagem:
    type: object
    description: 'Objeto utilizado para representar os dados da publicação'
    required:
      - data
      - usuario
      - titulo
      - mensagem
    properties:
      id:
        type: integer
        description: 'Identificador unica da publicação'
      data:
        type: string
        format: date-time
        description: 'Data e hora em que a postagem foi publicada'
      titulo:
        type: string
        description: 'Titulo da publicação'
      mensagem:
        type: string
        description: 'Mensagem da publicação'
      usuario:
        $ref: '#/definitions/Usuario'
