swagger: '2.0'
# Especifica as informações da API
info:
  version: 1.0.0
  title: Sample API
  description: API description in Markdown
  contact:
    name: MinhaAPI
    url: http://www.minha.api.com.br/
    email: r.fernandon@gmail.com
# Especifica o servidor da API e a URL base
host: api.example.com
basePath: /v1
# Especifica o protocolo da API
schemes:
  - http
  - https
# As seções consumese producesdefinem os tipos MIME suportados pela API.
# A definição no nível raiz pode ser substituída em operações individuais.
consumes:
  - application/json
  - application/xml
produces:
  - application/json
  - application/xml
# Especifica os endpoint da API
paths:
  /usuarios:
    get:
      tags:
        - Consulta
      summary: Retorna a lista de usuários.
      description: Este endpoint retorna **todos** os usuários cadastrados.
      operationId: usuariosGet
      produces:
        - application/json
      responses:
        200:
          description: Retorna uma lista de usuários
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Usuario"
        204:
          description: Nenhum usuário foi encontrado.
        500:
          description: Ocorreu um erro inesperado.
    post:
      tags:
        - Cadastro
      summary: Cadastro de usuários.
      description: Este endpoint cadastra um usuário.
      operationId: usuariosPost
      parameters:
        - in: body
          name: usuario
          description: Parâmetro referente ao usuário.
          required: true
          schema:
            $ref: "#/definitions/Usuario"
      responses:
        201:
          description: Retorna o usuário cadastrado
          schema:
            $ref: '#/definitions/Usuario'
        404:
          description: Requisição inválida.
        500:
          description: Ocorreu um erro inesperado.
  /usuarios/{id}:
    get:
      tags:
        - Consulta
      summary: Retorna um usuário.
      description: Este endpoint retorna um usuário cadastrado por id.
      operationId: usuariosIdGet
      parameters:
        - in: path
          name: id
          description: Parâmetro referente ao id do usuário.
          required: true
          type: integer
      responses:
        200:
          description: Retorna o usuário referente ao id
          schema:
            $ref: '#/definitions/Usuario'
        204:
          description: Nenhum usuário foi encontrado.
        400:
          description: Usuário não localizado.
        500:
          description: Ocorreu um erro inesperado.
    put:
      tags:
        - Atualiza
      summary: Atualiza um usuário.
      description: Este endpoint atualiza um usuário cadastrad.
      operationId: usuariosIdPut
      parameters:
        - in: path
          name: id
          description: Parâmetro referente ao id do usuário.
          required: true
          type: integer
        - in: body
          name: usuario
          description: Parâmetro referente ao id do usuário.
          required: true
          schema:
            $ref: '#/definitions/Usuario'
      responses:
        200:
          description: Retorna o usuário atualizado
          schema:
            $ref: '#/definitions/Usuario'
        400:
          description: Usuário não localizado.
        404:
          description: Requisição inválida.
        500:
          description: Ocorreu um erro inesperado.
    delete:
      tags:
        - Remove
      summary: Exclui um usuário.
      description: Este endpoint exclui um usuário cadastrado.
      operationId: usuariosIdDelete
      parameters:
        - in: path
          name: id
          description: Parâmetro referente ao id do usuário.
          required: true
          type: integer
      responses:
        200:
          description: Retorna a mensagem de operação OK
        400:
          description: Usuário não localizado.
        500:
          description: Ocorreu um erro inesperado.
  /usuarios/cliente/{clienteId}:
    get:
      tags:
        - Consulta
      summary: Retorna usuários.
      description: Este endpoint retorna todos os usuários cadastrado do cliente id.
      operationId: usuariosClienteClienteIdGet
      parameters:
        - in: path
          name: clienteId
          description: Parâmetro referente ao id do cliente.
          required: true
          type: integer
      responses:
        200:
          description: Retorna todos os usuários do cliente id
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Usuario"
        204:
          description: Nenhum usuário foi encontrado.
        400:
          description: Usuário não localizado.
        500:
          description: Ocorreu um erro inesperado.
definitions:
  Usuario:
    type: "object"
    description: Objeto utilizado para representar os dados do usuário
    # Define os campos obrigatórios
    required:
      - nome
      - username
      - password
      - email
    properties:
      id:
        type: "integer"
        format: "integer"
        description: Identificador unico do usuário
      nome:
        type: "string"
        description: Nome do usuário
      username:
        type: "string"
        description: Username do usuário
      password:
        type: "string"
        description: Password do usuário
      email:
        type: "string"
        description: Email do usuário
      ativo:
        type: "boolean"
        description: Flag para infirmar se o usuário está ativo
      pessoa:
        $ref: '#/definitions/Pessoa'
  Pessoa:
    type: "object"
    description: Objeto utilizado para representar os dados da pessoa
    required:
      - nome
      - estadoCivil
    properties:
      id:
        type: "integer"
        format: "integer"
        description: Identificador unico da pessoa
      nome:
        type: "string"
        description: Nome da pessoa
      estadoCivil:
        type: "string"
        description: Define o estado civil da pessoa
        enum:
          - "CASADO"
          - "SOLTEIRO"
          - "VIUVO"
